/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <fun>
#include <cstrike>

#define PLUGIN "WeaponMenu"
#define VERSION "1.0"
#define AUTHOR "xTriplex"

// Menu ID
new g_menu;

// Array of primary weapons in their full weapon name format
new const primaryWeapons[][] = {
    "weapon_scout",
    "weapon_xm1014",
    "weapon_mac10",
    "weapon_aug",
    "weapon_ump45",
    "weapon_sg550",
    "weapon_galil",
    "weapon_famas",
    "weapon_awp",
    "weapon_mp5navy",
    "weapon_m249",
    "weapon_m3",
    "weapon_m4a1",
    "weapon_tmp",
    "weapon_g3sg1",
    "weapon_sg552",
    "weapon_ak47",
    "weapon_p90"
};

public plugin_init()
{
    register_plugin(PLUGIN, VERSION, AUTHOR)
    
    register_clcmd("say /give", "showWeaponMenu")
    register_clcmd("say_team /give", "showWeaponMenu")
    
    g_menu = menu_create("Choose your weapon:", "menu_handler")
    menu_additem(g_menu, "AK47", "1")
    menu_additem(g_menu, "M4A1", "2")
    menu_additem(g_menu, "AWP", "3")
    menu_additem(g_menu, "MP5", "4")
    menu_additem(g_menu, "AUG", "5")
    menu_additem(g_menu, "XM1014", "6")
    menu_additem(g_menu, "M3", "7")
}

public showWeaponMenu(id)
{
    if (is_user_alive(id))
    {
        menu_display(id, g_menu, 0)
    }
    return PLUGIN_HANDLED
}

public menu_handler(id, menu, item)
{
    if (item == MENU_EXIT || item < 0)
    {
        return PLUGIN_HANDLED
    }
    
    new data[6], access, callback
    menu_item_getinfo(menu, item, access, data, 5, _, _, callback)
    
    new weapon_id = str_to_num(data)
    
    switch (weapon_id)
    {
        case 1: giveWeapon(id, "weapon_ak47", "AK47")
        case 2: giveWeapon(id, "weapon_m4a1", "M4A1")
        case 3: giveWeapon(id, "weapon_awp", "AWP")
        case 4: giveWeapon(id, "weapon_mp5navy", "MP5")
        case 5: giveWeapon(id, "weapon_aug", "AUG")
        case 6: giveWeapon(id, "weapon_xm1014", "XM1014")
        case 7: giveWeapon(id, "weapon_m3", "M3")
    }
    
    return PLUGIN_HANDLED
}

public giveWeapon(id, const weapon[], const weaponName[])
{
    dropPrimaryWeapon(id)
    give_item(id, weapon)
    client_print(id, print_chat, "You just got ---> %s", weaponName)
}

public dropPrimaryWeapon(id)
{
    for (new i = 0; i < sizeof primaryWeapons; i++)
    {
        // Check if the player has the weapon
        if (user_has_weapon(id, get_weapon_index(primaryWeapons[i])))
        {
            // Drop the weapon using client_cmd
            client_cmd(id, "drop %s", primaryWeapons[i])
            return // Drop only the first primary weapon found
        }
    }
}

// Helper function to convert weapon names to weapon indexes
public get_weapon_index(const weapon[])
{
    if (equali(weapon, "weapon_scout")) return CSW_SG550
    if (equali(weapon, "weapon_xm1014")) return CSW_XM1014
    if (equali(weapon, "weapon_mac10")) return CSW_MAC10
    if (equali(weapon, "weapon_aug")) return CSW_AUG
    if (equali(weapon, "weapon_ump45")) return CSW_UMP45
    if (equali(weapon, "weapon_sg550")) return CSW_SG550
    if (equali(weapon, "weapon_galil")) return CSW_GALIL
    if (equali(weapon, "weapon_famas")) return CSW_FAMAS
    if (equali(weapon, "weapon_awp")) return CSW_AWP
    if (equali(weapon, "weapon_mp5navy")) return CSW_MP5NAVY
    if (equali(weapon, "weapon_m249")) return CSW_M249
    if (equali(weapon, "weapon_m3")) return CSW_M3
    if (equali(weapon, "weapon_m4a1")) return CSW_M4A1
    if (equali(weapon, "weapon_tmp")) return CSW_TMP
    if (equali(weapon, "weapon_g3sg1")) return CSW_G3SG1
    if (equali(weapon, "weapon_sg552")) return CSW_SG552
    if (equali(weapon, "weapon_ak47")) return CSW_AK47
    if (equali(weapon, "weapon_p90")) return CSW_P90
    return -1 // Return -1 if weapon not found
}
